pragma solidity 0.5.12;

contract Aluguelbike
{
    string public locadora;
    string public cliente;
    uint256 public valorDiaria=1 ether;
    uint256 public valorLocacao;
    bool[] public requisitoPreenchido;
    address payable public contaLocadora;
    address payable public contaCliente;
    uint256 public periodoDeLocacao;
    
    // 
    constructor(string memory nomeLocadora, string memory nomeCliente, address payable paramContaLocadora, uint256 _periodoDeLocacao) public payable
    {
        require (_periodoDeLocacao>=2);
        require (msg.value==_periodoDeLocacao*(valorDiaria*2));
        locadora = nomeLocadora;
        cliente = nomeCliente;
        valorLocacao = msg.value;
        contaLocadora = paramContaLocadora;
        contaCliente = msg.sender;
    }
 
    function retornabike() public 
    {
        require (msg.sender==contaLocadora); 
        contaLocadora.transfer(valorLocacao/2);
        contaCliente.transfer(valorLocacao/2);
    }
}
