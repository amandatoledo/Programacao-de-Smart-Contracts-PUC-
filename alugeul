pragma solidity 0.5.12;
/* Observações
sempre fechar as fuções com {
função tipo view - uso apenas para visulalizar
retun - quando executada retorna algo
No solidity para alterar o conteúdo da variável eu necessito de uma função 
O ahei ao invés de começar com 1 começa com 0
Função = cláusula
*/

// exemplo 
contract Alguel {
    
    string public locatario;

    string public locador;

    uint256 private valor;

    uint256 constant numeroMaximoLegalDeAlugueisParaMulta =3; 
    // bool significa 
    bool[ ] public statusPagamento;
    
    address payable public contaLocatario;

    constructor(
        string memory nomeLocador,
        string memory nomeLocatario,
        uint256 valorDoAluguel)
    public {
        locador = nomeLocador;
        locatario = nomeLocatario;
        valor = valorDoAluguel;
        contaLocatario = paramContaLocatario;
    
            
    }
    function ValorAtualDoAlguel() public view returns (uint256) 
    {
    return valor;
    }
    
    function simulaMulta (uint256  mesesRestantes,uint256 totalMesesContrato) public view returns (uint256 valorMulta)
    {
                valorMulta = valor*numeroMaximoLegalDeAlugueisParaMulta;
                valorMulta = valorMulta/totalMesesContrato;
                valorMulta = valorMulta*mesesRestantes;
                
                return (valorMulta);
                
        }
    function reajustaAluguel (uint256 percentualReajuste)public
    {
        if (percentualReajuste > 20)
    {
        percentualReajuste = 20;
    }

        uint256 ValordoAcrescimo = 0;
        ValordoAcrescimo = ((valor *percentualReajuste)/100);
        valor = valor + ValordoAcrescimo;
        
    }
    
    function aditamentoValorAluguel (uint256 valorcerto) public
    {
    valor = valorcerto;
    }
    function aplicaMulta(uint256 mesesRestantes, uint256 percentual)public
{
    require (mesesRestantes <30, "Periodo de contrato invalido");
    for (uint i=1; i<mesesRestantes;i++)
    {
        valor = valor+((valor*percentual)/100);
    }
    function receberPagamento() public payable 
    {
    }
        require(msg.value>=valor, "Valor insuficiente");
        contaLocatario.transfer(msg.value);
        satsPagamento.push(true);
        
    }
}
}
